<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <title>笔趣阁小说阅读</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon" />
    <link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
    <link rel="stylesheet" href="/stylesheets/common.css">
</head>
<body>
<% include component/topNavbar.ejs%>

<!--导航栏-->
<div class="header">
    <ul>
        <li><a href="/">首页</a></li>
        <li><a href="/bookSort">分类</a></li>
        <li><a href="/bookRank/1">排行</a></li>
        <li class="active"><a href="/bookState/1">全本</a></li>
        <li><a href="/bookShelf">书架</a></li>
    </ul>
</div>
<%include component/search.ejs%>
<div class="container">
    <div class="row stateType">
        <ul class="col-sm-12" id="myTab">
            <input class="btn btn-default col-sm-4 col-xs-4 latestUpdate active" type="button" value="最新更新" onclick="getTopList(1, 0)">
            <input class="btn btn-default col-sm-4 col-xs-4 latestCreate" type="button" value="最新入库" onclick="getTopList(2, 0)">
            <input class="btn btn-default col-sm-4 col-xs-4 finishedBook" type="button" value="完结全本" onclick="getTopList(3, 0)">
        </ul>
    </div>
</div>

<!--相应类型书籍列表-->
<div class="container">
    <div class="intro">排行榜</div>
    <div class="row">
        <ul class="col-sm-12" id="bookList"></ul>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-sm-12">
            <button  class="btn btn-primary selectBtn" id="prevPage" onclick="getPage(-1)">上一页</button>
            <select  class="selectIndex" id="selectIndex" onchange="getList()" style="color: #333333">
                <option value="0">第1/20页</option>
            </select>
            <button  class="btn btn-primary selectBtn" id="nextPage" onclick="getPage(1)">下一页</button>
        </div>
        <div class=" col-sm-12" style="margin-top: 15px">
            <div class="input-group form-group">
                <input type="text" class="form-control" placeholder="输入页数" id="searchPageIndex">
                <span class="input-group-btn">
                <button class="btn btn-default" type="button" onclick="jumpPage()">跳转</button>
            </span>
            </div>
        </div>

    </div>
</div>
<%- include component/footer.ejs %>
<script>
    let selectType = '<%= userInfo.typeId%>';
    let pageIndex = 0;// 目录分页序号
    let pageCount = '<%= userInfo.pageCount%>';// 目录总页数
    let finishCount = 0;// 完结页面目录总页数
    const httpUrl=[
        hostUrl + '/bookState/getCount',
        hostUrl + '/bookState/getTopList',
    ];
    $(function () {
        switch (selectType) {
            case '1': $('.latestUpdate').click();break;
            case '2': $('.latestCreate').click();break;
            case '3': $('.finishedBook').click();break;
            default: $('.latestUpdate').click();break;
        }
    });
    $('#myTab input').click(function () {
        $(this).siblings('input').removeClass('active');
        $(this).addClass('active');
    });
    //获取分页数量rank
    function getCount(selectType) {
        $.post(httpUrl[0],{selectType: selectType},
            function (result) {
                if (result.success) {
                    if(selectType ==3){
                        finishCount = result.data;
                    }else{
                        pageCount= result.data;
                    }
                    // console.log('getCount '+selectType+' '+ pageCount+ ' '+result.data);
                    let html = '';
                    html+= '<option value="0" selected="selected">第 1/'+ result.data +' 页</option>';
                    for (var i = 1; i < result.data; i++) {
                        var index = parseInt(i)+1;
                        html += '<option value='+i+'>第 '+ index +'/'+ result.data +' 页</option>';
                    }
                    document.getElementById('selectIndex').innerHTML = html;
                }
            }
        );
    }
    //上一页或下一页
    function getPage(delta){
        let index = parseInt(pageIndex) + parseInt(delta);
        // console.log('getPage', pageIndex, index);
        //如果查找目录页面超过范围
        if(index<0 || (index>=pageCount && selectType != 3) || (index>=finishCount && selectType ==3)){
            alert('查找页面超出范围');
            return;
        }
        //跳转页面未超出范围则更改相应select选中项
        $(".selectIndex").val(index);
        // $("#selectIndex option[value= 'data' ]").prop("selected",true);
        getList();
    }
    //获取分页列表
    function getList() {
        let index = $('#selectIndex').children('option:selected').val();
        // console.log('getList', pageIndex, index);
        if(index == pageIndex){
            return;
        }
        getTopList(selectType, index);
    }
    // 获得总榜
    function getTopList(type, index){
        //如果选择了一个新的展示类型则重绘选择框
        if( selectType !== type){
            getCount(type);
        }else if( selectType === type && pageIndex === index){
            return;
        }
        selectType = type;
        pageIndex = index;
        $(".selectIndex").val(index);
        // console.log('getTopList', pageIndex, index, pageCount);
        switch (selectType) {
            case 1: $('.intro').text('最新更新');break;
            case 2: $('.intro').text('最新入库');break;
            case 3: $('.intro').text('完本全本');break;
            default: $('.intro').text('最新更新');break;
        }
        function formateDate(date) {
            var date = new Date(date);
            var y = date.getFullYear();
            var m = date.getMonth() + 1;
            var d = date.getDate();
            m = m > 9 ? m : '0' + m;
            d = d > 9 ? d : '0' + d;
            return y + '-' + m + '-' + d;
        }
        $.post(httpUrl[1],{selectType: selectType, pageIndex: pageIndex},
            function (result) {
                if (result.success) {
                    var html = '';
                    for(var i = 0; i < result.data.length; i++){
                        html += '<p class="line">';
                        html += '<span href="#">[' + result.data[i].bookTypeName + ']</span>';
                        html += '<a href= "/bookInfo/' + result.data[i].bookId + '" class="blue">'+ result.data[i].bookName +'</a>/';
                        html += '<a href="/author/' + result.data[i].authorName +'">'+ result.data[i].authorName + '</a>';
                        if(selectType ==2){
                            html += '<span style="float: right">' + formateDate(result.data[i].createTime) + '</span>';
                        }else{
                            html += '<span style="float: right">' + formateDate(result.data[i].updateTime) + '</span>';
                        }
                        html += '</p>';
                    }
                    document.getElementById(`bookList`).innerHTML = html;
                }
            }
        );
        checkState(index);
    }
    function jumpPage() {
        const index = $('#searchPageIndex').val();
        if(index =='' || isNaN(parseInt(index))){
            alert('输入不能为空且必须是数字');
            return;
        }
        getPage($('#searchPageIndex').val()-1-pageIndex);
    }
    function checkState(pageIndex) {
        // 如果在首页且总共只有一页
        let pageNum= selectType == 3? finishCount: pageCount;
        // console.log('cc', pageNum, finishCount, pageCount);
        if(pageIndex == 0 && pageIndex == pageNum-1){
            $('#prevPage').prop('disabled',true);
            $('#nextPage').prop('disabled',true);
        }
        // 如果在首页且总共有多页
        else if(pageIndex == 0 && pageIndex < pageNum-1){
            $('#prevPage').prop('disabled',true);
            $('#nextPage').prop('disabled',false);
        }
        // 如果不在首页且不在尾页
        else if(pageIndex > 0 && pageIndex < pageNum-1){
            $('#prevPage').prop('disabled',false);
            $('#nextPage').prop('disabled',false);
        }
        // 如果在尾页
        else if(pageIndex > 0 && pageIndex == pageNum-1){
            $('#prevPage').prop('disabled',false);
            $('#nextPage').prop('disabled',true);
        }
    }
</script>
</body>
</html>